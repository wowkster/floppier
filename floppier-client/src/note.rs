use defmt::Format;
use num_enum::{IntoPrimitive, TryFromPrimitive};

use crate::TIMER_RESOLUTION_US;

/// An enum of all the possible notes representable in MIDI
/// 
/// https://www.music.mcgill.ca/~ich/classes/mumt306/StandardMIDIfileformat.html#BMA1_3
#[allow(unused, non_camel_case_types)]
#[rustfmt::skip]
#[repr(u8)]
#[derive(Debug, Format, Default, Copy, Clone, PartialEq, Eq, Hash, IntoPrimitive, TryFromPrimitive)]
pub enum Note {
    #[default]
    C_1, Cs_1, D_1, Ds_1, E_1, F_1, Fs_1, G_1, Gs_1, A_1, As_1, B_1,
    C0, Cs0, D0, Ds0, E0, F0, Fs0, G0, Gs0, A0, As0, B0,
    C1, Cs1, D1, Ds1, E1, F1, Fs1, G1, Gs1, A1, As1, B1,
    C2, Cs2, D2, Ds2, E2, F2, Fs2, G2, Gs2, A2, As2, B2,
    C3, Cs3, D3, Ds3, E3, F3, Fs3, G3, Gs3, A3, As3, B3,
    C4, Cs4, D4, Ds4, E4, F4, Fs4, G4, Gs4, A4, As4, B4,
    C5, Cs5, D5, Ds5, E5, F5, Fs5, G5, Gs5, A5, As5, B5,
    C6, Cs6, D6, Ds6, E6, F6, Fs6, G6, Gs6, A6, As6, B6,
    C7, Cs7, D7, Ds7, E7, F7, Fs7, G7, Gs7, A7, As7, B7,
    C8, Cs8, D8, Ds8, E8, F8, Fs8, G8, Gs8, A8, As8, B8,
    C9, Cs9, D9, Ds9, E9, F9, Fs9, G9, 
}

impl Note {
    /// Convert a note to a period in microseconds
    pub const fn period_us(self) -> u32 {
        NOTE_TO_PERIOD_TABLE[self as usize]
    }

    /// Certain notes are not playable due to the limitations of the hardware.
    /// e.x. Very low notes and very high notes do not sound good on the floppy drives and risk damaging them.
    ///
    /// Notes that are not playable are stored with a period of 0
    pub const fn is_playable(self) -> bool {
        self.period_us() != 0
    }

    /// Convert a note to half the number of ticks required to play that note.
    ///
    /// i.e. the number of ticks to play half a period (the time between toggling the step pin).
    pub const fn half_ticks(self) -> u32 {
        NOTE_TO_HALF_TICKS_TABLE[self as usize]
    }
}

/// Table that maps MIDI note numbers to period in microseconds
/// 
/// https://www.sensorsone.com/frequency-to-period-calculator/
#[rustfmt::skip]
const NOTE_TO_PERIOD_TABLE: [u32;128] = [
    // C-1 to B-1
    0,      0,      0,      0, 
    0,      0,      0,      0, 
    0,      0,      0,      0, 
    // C0 to B0
    61156,  57723,  54483,  51425, 
    48539,  45815,  43243,  40816, 
    38525,  36363,  34322,  32396,
    // C1 to B1
    30578,  28861,  27241,  25712, 
    24269,  22907,  21621,  20408, 
    19262,  18181,  17161,  16198, 
    // C2 to B2
    15289,  14430,  13620,  12856, 
    12134,  11453,  10810,  10204, 
    9631,   9090,   8580,   8099,
    // C3 to B3
    7644,   7215,   6810,   6428, 
    6067,   5726,   5405,   5102, 
    4815,   4545,   4290,   4049, 
    // C4 to B4
    3822,   3607,   3405,   3214, 
    3033,   2863,   2702,   2551, 
    2407,   2272,   2145,   2024, 
    // C5 to B5
    1911,   1803,   1702,   1607, 
    1516,   1431,   1351,   1275, 
    1203,   1136,   1072,   1012, 
    // C6 to B6
    955,    901,    851,    803, 
    758,    715,    675,    637, 
    601,    568,    536,    506, 
    // C7 to B7
    477,    450,    425,    401, 
    379,    357,    337,    318, 
    300,    284,    268,    253, 
    // C8 to B8
    238,    225,    212,    200, 
    189,    178,    168,    159, 
    150,    142,    134,    126, 
    // C9 to G9
    0,      0,      0,      0, 
    0,      0,      0,      0, 
];

const TIMER_RESOLUTION_US_U32: u32 = TIMER_RESOLUTION_US as u32;

/// Table that maps MIDI note numbers to the number of ticks required to play that note
/// 
/// = period / timer_resolution
#[rustfmt::skip]
const NOTE_TO_TICKS_TABLE: [u32;128] = [
    NOTE_TO_PERIOD_TABLE[0] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[1] / TIMER_RESOLUTION_US_U32, 
    NOTE_TO_PERIOD_TABLE[2] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[3] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[4] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[5] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[6] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[7] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[8] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[9] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[10] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[11] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[12] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[13] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[14] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[15] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[16] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[17] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[18] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[19] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[20] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[21] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[22] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[23] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[24] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[25] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[26] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[27] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[28] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[29] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[30] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[31] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[32] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[33] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[34] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[35] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[36] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[37] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[38] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[39] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[40] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[41] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[42] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[43] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[44] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[45] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[46] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[47] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[48] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[49] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[50] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[51] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[52] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[53] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[54] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[55] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[56] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[57] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[58] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[59] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[60] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[61] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[62] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[63] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[64] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[65] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[66] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[67] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[68] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[69] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[70] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[71] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[72] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[73] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[74] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[75] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[76] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[77] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[78] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[79] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[80] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[81] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[82] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[83] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[84] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[85] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[86] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[87] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[88] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[89] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[90] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[91] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[92] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[93] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[94] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[95] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[96] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[97] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[98] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[99] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[100] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[101] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[102] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[103] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[104] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[105] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[106] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[107] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[108] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[109] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[110] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[111] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[112] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[113] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[114] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[115] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[116] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[117] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[118] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[119] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[120] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[121] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[122] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[123] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[124] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[125] / TIMER_RESOLUTION_US_U32,
    NOTE_TO_PERIOD_TABLE[126] / TIMER_RESOLUTION_US_U32, NOTE_TO_PERIOD_TABLE[127] / TIMER_RESOLUTION_US_U32,
];

/// Table that maps MIDI note numbers to half the numbr of ticks required to play that note.
/// This corresponds to the number of ticks to play half a period (the time between toggling the step pin).
/// 
/// = period / (timer_resolution * 2)
#[rustfmt::skip]
const NOTE_TO_HALF_TICKS_TABLE: [u32;128] = [
    NOTE_TO_TICKS_TABLE[0] / 2, NOTE_TO_TICKS_TABLE[1] / 2, NOTE_TO_TICKS_TABLE[2] / 2, NOTE_TO_TICKS_TABLE[3] / 2,
    NOTE_TO_TICKS_TABLE[4] / 2, NOTE_TO_TICKS_TABLE[5] / 2, NOTE_TO_TICKS_TABLE[6] / 2, NOTE_TO_TICKS_TABLE[7] / 2,
    NOTE_TO_TICKS_TABLE[8] / 2, NOTE_TO_TICKS_TABLE[9] / 2, NOTE_TO_TICKS_TABLE[10] / 2, NOTE_TO_TICKS_TABLE[11] / 2,
    NOTE_TO_TICKS_TABLE[12] / 2, NOTE_TO_TICKS_TABLE[13] / 2, NOTE_TO_TICKS_TABLE[14] / 2, NOTE_TO_TICKS_TABLE[15] / 2,
    NOTE_TO_TICKS_TABLE[16] / 2, NOTE_TO_TICKS_TABLE[17] / 2, NOTE_TO_TICKS_TABLE[18] / 2, NOTE_TO_TICKS_TABLE[19] / 2,
    NOTE_TO_TICKS_TABLE[20] / 2, NOTE_TO_TICKS_TABLE[21] / 2, NOTE_TO_TICKS_TABLE[22] / 2, NOTE_TO_TICKS_TABLE[23] / 2,
    NOTE_TO_TICKS_TABLE[24] / 2, NOTE_TO_TICKS_TABLE[25] / 2, NOTE_TO_TICKS_TABLE[26] / 2, NOTE_TO_TICKS_TABLE[27] / 2,
    NOTE_TO_TICKS_TABLE[28] / 2, NOTE_TO_TICKS_TABLE[29] / 2, NOTE_TO_TICKS_TABLE[30] / 2, NOTE_TO_TICKS_TABLE[31] / 2,
    NOTE_TO_TICKS_TABLE[32] / 2, NOTE_TO_TICKS_TABLE[33] / 2, NOTE_TO_TICKS_TABLE[34] / 2, NOTE_TO_TICKS_TABLE[35] / 2,
    NOTE_TO_TICKS_TABLE[36] / 2, NOTE_TO_TICKS_TABLE[37] / 2, NOTE_TO_TICKS_TABLE[38] / 2, NOTE_TO_TICKS_TABLE[39] / 2,
    NOTE_TO_TICKS_TABLE[40] / 2, NOTE_TO_TICKS_TABLE[41] / 2, NOTE_TO_TICKS_TABLE[42] / 2, NOTE_TO_TICKS_TABLE[43] / 2,
    NOTE_TO_TICKS_TABLE[44] / 2, NOTE_TO_TICKS_TABLE[45] / 2, NOTE_TO_TICKS_TABLE[46] / 2, NOTE_TO_TICKS_TABLE[47] / 2,
    NOTE_TO_TICKS_TABLE[48] / 2, NOTE_TO_TICKS_TABLE[49] / 2, NOTE_TO_TICKS_TABLE[50] / 2, NOTE_TO_TICKS_TABLE[51] / 2,
    NOTE_TO_TICKS_TABLE[52] / 2, NOTE_TO_TICKS_TABLE[53] / 2, NOTE_TO_TICKS_TABLE[54] / 2, NOTE_TO_TICKS_TABLE[55] / 2,
    NOTE_TO_TICKS_TABLE[56] / 2, NOTE_TO_TICKS_TABLE[57] / 2, NOTE_TO_TICKS_TABLE[58] / 2, NOTE_TO_TICKS_TABLE[59] / 2,
    NOTE_TO_TICKS_TABLE[60] / 2, NOTE_TO_TICKS_TABLE[61] / 2, NOTE_TO_TICKS_TABLE[62] / 2, NOTE_TO_TICKS_TABLE[63] / 2,
    NOTE_TO_TICKS_TABLE[64] / 2, NOTE_TO_TICKS_TABLE[65] / 2, NOTE_TO_TICKS_TABLE[66] / 2, NOTE_TO_TICKS_TABLE[67] / 2,
    NOTE_TO_TICKS_TABLE[68] / 2, NOTE_TO_TICKS_TABLE[69] / 2, NOTE_TO_TICKS_TABLE[70] / 2, NOTE_TO_TICKS_TABLE[71] / 2,
    NOTE_TO_TICKS_TABLE[72] / 2, NOTE_TO_TICKS_TABLE[73] / 2, NOTE_TO_TICKS_TABLE[74] / 2, NOTE_TO_TICKS_TABLE[75] / 2,
    NOTE_TO_TICKS_TABLE[76] / 2, NOTE_TO_TICKS_TABLE[77] / 2, NOTE_TO_TICKS_TABLE[78] / 2, NOTE_TO_TICKS_TABLE[79] / 2,
    NOTE_TO_TICKS_TABLE[80] / 2, NOTE_TO_TICKS_TABLE[81] / 2, NOTE_TO_TICKS_TABLE[82] / 2, NOTE_TO_TICKS_TABLE[83] / 2,
    NOTE_TO_TICKS_TABLE[84] / 2, NOTE_TO_TICKS_TABLE[85] / 2, NOTE_TO_TICKS_TABLE[86] / 2, NOTE_TO_TICKS_TABLE[87] / 2,
    NOTE_TO_TICKS_TABLE[88] / 2, NOTE_TO_TICKS_TABLE[89] / 2, NOTE_TO_TICKS_TABLE[90] / 2, NOTE_TO_TICKS_TABLE[91] / 2,
    NOTE_TO_TICKS_TABLE[92] / 2, NOTE_TO_TICKS_TABLE[93] / 2, NOTE_TO_TICKS_TABLE[94] / 2, NOTE_TO_TICKS_TABLE[95] / 2,
    NOTE_TO_TICKS_TABLE[96] / 2, NOTE_TO_TICKS_TABLE[97] / 2, NOTE_TO_TICKS_TABLE[98] / 2, NOTE_TO_TICKS_TABLE[99] / 2,
    NOTE_TO_TICKS_TABLE[100] / 2, NOTE_TO_TICKS_TABLE[101] / 2, NOTE_TO_TICKS_TABLE[102] / 2, NOTE_TO_TICKS_TABLE[103] / 2,
    NOTE_TO_TICKS_TABLE[104] / 2, NOTE_TO_TICKS_TABLE[105] / 2, NOTE_TO_TICKS_TABLE[106] / 2, NOTE_TO_TICKS_TABLE[107] / 2,
    NOTE_TO_TICKS_TABLE[108] / 2, NOTE_TO_TICKS_TABLE[109] / 2, NOTE_TO_TICKS_TABLE[110] / 2, NOTE_TO_TICKS_TABLE[111] / 2,
    NOTE_TO_TICKS_TABLE[112] / 2, NOTE_TO_TICKS_TABLE[113] / 2, NOTE_TO_TICKS_TABLE[114] / 2, NOTE_TO_TICKS_TABLE[115] / 2,
    NOTE_TO_TICKS_TABLE[116] / 2, NOTE_TO_TICKS_TABLE[117] / 2, NOTE_TO_TICKS_TABLE[118] / 2, NOTE_TO_TICKS_TABLE[119] / 2,
    NOTE_TO_TICKS_TABLE[120] / 2, NOTE_TO_TICKS_TABLE[121] / 2, NOTE_TO_TICKS_TABLE[122] / 2, NOTE_TO_TICKS_TABLE[123] / 2,
    NOTE_TO_TICKS_TABLE[124] / 2, NOTE_TO_TICKS_TABLE[125] / 2, NOTE_TO_TICKS_TABLE[126] / 2, NOTE_TO_TICKS_TABLE[127] / 2,
];
